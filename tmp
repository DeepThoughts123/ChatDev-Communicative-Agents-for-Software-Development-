python3 run.py --task "I need a program that does this: it will take in a text contains some recommendation content, it will run evaluation of these content with a multi-agent system, one agent provides the initial eval, one agent provides critique of the eval, the original agent then generate a new set of eval, with the other agent providing yet another critique, the loop continues until the critique agent provides no more critique and is happy about the result, in which case we then output the eval results, or the loop will stop when ti reachs the max step specify by the user. Note that each agent is a LLM, you need to also generate the prompt template to be used for each agent" --name "multi-agent"



python3 run.py --task "I need a program that does this: it will take in a blob of text contains some content, it will run evaluation of these content with a multi-agent system, one agent provides the initial eval, one agent provides critique of the eval, the original agent then generate a new set of eval, with the other agent providing yet another critique, the loop continues until the critique agent provides no more critique and is happy about the result, in which case we then output the eval results, or the loop will stop when ti reachs the max step specify by the user. Note that each agent is a LLM, the evaluation and critique is carried via api calls to openai models. 
you need to also generate the prompt template to be used for each agent" --name "multi-agent_gpt_4_turbo"  --model 'GPT_4_TURBO'


python3 run.py --task "I need a python program that does this: it allows interaction with users via text, where user start with an input that descript their needs, the system then use OpenAI calls to parse the requirement, it will conduct interview style interaction with the user to help better formulate the user requirements (as users might not be good at uttering what they want). The interaction will end when users thinks the requirement is clear. otherwise the back and forth will keep going" --name "multi-agent"  